swirl()
swirl()
library(swirl)
swirl()
data(cars)
help(uninstall)
??uninstall
install.packages("swirl")
library(swirl)
ls()
cars
ls
ls()
f<- c(0,3,4)
swirl()
swirl
swirl()
1
swirl()
head(airquality)
ls()
head(mytrellis)
mytrellis
rx1
airquality
swirl()
library(swirl)
swirl()
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, col = "red", pch = 8, main="Big Apple Data")
xyplot(Ozone~Wind, data = airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone~Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5,1)
)
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5,1))
p <-xyplot(Ozone~Wind | Month, data = airquality)
p <-xyplot(Ozone~Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p["formula"]
p[1]
p[["x.limits"]]
command(f)
table(f)
xyplot(y~x|f)
xyplot(y~x|f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot (price~carat | color*cut, data = diamonds)
xyplot (price~carat | color*cut, data = diamonds, strip=FALSE, pch=20, xlab=myxlab, main=mymain)
xyplot(price~caat|color*cut, data = diamonds, strip=FALSE, pch=20, xlab=myxlab,ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data = diamonds, strip=FALSE, pch=20, xlab=myxlab,ylab=myylab, main=mymain)
xyplot(price~carat|color*cut, data = diamonds, pch=20, xlab=myxlab,ylab=myylab, main=mymain)
library(swirl)
swirl()
sample(Colors(), 10)
sample(colors(), 10)
colorRamp(c("red", "blue"))
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1
p1(2)
p1(6)
0xcc
p2<-colorRampPalette(c("red", "yellow"))
p2
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
showMe(p2(2))
p1
s
??rgb
?
rgb
p3<-colorRampPalette((c("blue", "green")))
p3<-colorRampPalette(c("blue", "green"))
p3<-colorRampPalette(c("blue", "green"), alpha=.5)
p3(5)
plot(x,y,pch=19, col=rgb(0,.5,.5))
plot(x,y,pch=19, col=rgb(0,.5,.5,.3))
cols <- brewer.pal(3, "BuGn")
showMe(cols)
pal <- colorRampPalette(cols)
showMe(pal(20))
play()
showMe(pal(200))
nxt()
image(volcano, col = pal(20))
image(volcano, col = pl(20))
image(volcano, col = p1(20))
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, mpg)
asd
qplot
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"))
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot"")
""
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", col = "manufacturer")
qplot(drv, hwy, data = mpg, geom = "boxplot", col = manufacturer)
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = .~ drv)
qplot(hwy, data = mpg, facets = drv, binwidth = 2)
qplot(hwy, data = mpg, facets = drv ~., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets, .~drv)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets= .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth("lm")
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+ facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+ facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!") + labs(x = "Displacement" y = "hwy Mileage")
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!") + labs(x = "Displacement" y = "hwy Mileage")
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "hwy Mileage")
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!") + labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(aes(color = drv), size = 2, alpha = 1/2) + geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color = drv)) + theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim=c(-3,3))
g<- ggplot(testdat, aes(x=myx, y=myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x=displ, y = hwy, color = factor(year)))
g
g+geom_point()
play()
g + geom_ling()
g + geom_line()
g+geom_point()
nxt()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labls(x = "Displacement", y = "Highway Mileage", title = "Swirly Rules!")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirly Rules!")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+ geom_smooth(method = "lm", se = FALSE, size = 2, color = "black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
library(swirl)
swirl()
str(diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, cut, data = mph)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut) + geom_smooth(method = "lm")
qplot(carat, price, data = diamonds, color = cut, facets = .~cut) + geom_smooth(method = "lm")
g < - ggplot(data = diamonds, aes(depth, price))
g < - ggplot(diamonds, aes(depth, price))
g < - ggplot(diamonds, aes("depth", "price))
""
)
asdf
)
)))
+
f""
g < - ggplot(diamonds, aes("depth", "price"))
g < - ggplot(diamonds)
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, qeq(0,1,length = 4), na.rm = TRUE)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha = 1/3) + facet_grid(cut~car)
g + geom_point(alpha = 1/3) + facet_grid(cut~car2)
diamonds[myd,]
g + geom_point(alpha = 1/3) + facet_grid(cut~car2) + geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
library(swirl)
swirl()
dist(dataFrame)
hclust(distxy)
hc <- hclust(distxy)
plot(hc)
plot(as.dendogram(hc))
plot(as.dendrogram(hc))
abline(h=1.5, col = "blue")
abline(h=.4, col = "red")
5
12
abline(h=.05, col = "green")
dist(dFsm)
hc
heatmap(dataMatrix, col = cm.colors(25))
heatmap(mt)
mt
plot(denmt)
distmt
library(swirl)
swirl()
cmat
points(cx,cy,col=c("red", "orange","purlpe"), pch=3, cex = 2, lwd = 2 )
points(cx,cy,col=c("red", "orange","purple"), pch=3, cex = 2, lwd = 2 )
mdist(x, y, cx, cy)
apply(disTmp, 2, wich.min)
apply(disTmp, 2, which.min)
apply(distTmp, 2, which.min)
points(x,y,pch = 19, cex = 2, col = cols1[newClust])
newClust
tapply(x,newClust,mean)
tapply(y,newClust,mean)
points(newCx, newCy, col = cols1, pch = 8, cex = 2, lwd = 2)
mdist(x,y,newCx, newCy)
apply(disTmp2, 2, which.min)
apply(distTmp2, 2, which.min)
points(x,y,pch = 19, cex = 2, col = cols1[newClust2])
tapply(y,newClust2,mean)
tapply(x,newClust2,mean)
tapply(y,newClust2,mean)
points(finalCx, finalCy, col = cols1, pch = 8, cex = 2, lwd = 2)
points(finalCx, finalCy, col = cols1, pch = 9, cex = 2, lwd = 2)
kmeans(dataFrame, centers = 3)
kmObj$iter
kmeans(dataFrame, centers = 3)
plot(x,y,col=kmObj$cluster, pch=19, cex=2)
points(kmObj$centers, col = c("black", "red","green"), pch = 3, cex = 3, lwd = 3)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
plot(x,y,col=kmeans(dataFrame,6)$cluster, pch=19, cex=2)
library(swirl)
swirl()
head(dataMatrix)
heatmap(dataMatrix)
myedit(addPatt.R)
myedit("addPatt.R")
source("addPatt.R", local=true)
source("addPatt.R", local=TRUE)
heatmap(dataMatrix)
mat
svd(mat)
matu%*%diag%*%t(matv)
scale(mat)
svd(scale(mat))
prcomp(scale(mat))
svd1$v[,1]
svd1$d
head(constantMatrix)
svd$d
svd2$d
svd2$v
svd2$v[,1:2]
svd2$d
dim(faceData)
a1 <-
a
a1 <- (svd1$u[,1]*svd1$d[1]) %*% svd1$v[,1]
a1 <- (svd1$u[,1]*svd1$d[1]) %*% t(svd1$v[,1])
myImage(a1)
a2 <- (svd1$u[,1:2]*svd1$d[1]) %*% t(svd1$v[,1:2])
a2 <- (svd1$u[,1:2]*svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- (svd1$u[,1:2]*diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
)
a2 <- (svd1$u[,1:2]*diag(svd1$d[1:2])) %*% t(svd1$v[,1:2])
a2 <- svd1$u[,1:2]*diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
a2 <- svd1$u[, 1:2]%*%diag(svd1$d[1:2]) %*% t(svd1$v[,1:2])
myImage(a2)
myImage(svd1$u[, 1:5]%*%diag(svd1$d[1:5]) %*% t(svd1$v[,1:5])
)
myImage(svd1$u[, 1:10]%*%diag(svd1$d[1:10]) %*% t(svd1$v[,1:10]))
library(swirl)
swirl()
dim(ssd)
names(ssd[;562,563])
names(ssd[,562:563])
table(ssd$subject)
sum(table(ssd$subject))
table(ssd$activity)
play()
ssd$activity
?sum
sum(ssd$activity)
table(ssd$activity)
table(ssd$activity)
table(ssd$activity)
sum(table(ssd$activity))
nxt()
sub1<0 subset(ssd, subject = 1)
sub1<- subset(ssd, subject = 1)
sub1<- subset(ssd, subject == 1)
dim(sub1)
names(sub1[,1:12])
myedit("showXY.R")
shoMe(1:6)
showMe(1:6)
mdist <- dist(sub1[,1:3])
hclustering <- hclust(mdist)
mypclust(hclustering, lab.col = unclass(sub1$activity))
myplclust(hclustering, lab.col = unclass(sub1$activity))
mdist <- dist(sub1[,10:12])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
svd1 <- svd(scale(sub1[,-c(562,563)]))
dim(svd1$u)
maxCon <- which.max(svd1$V[,2])
maxCon <- which.max(svd1$v[,2])
mdist <- dist(sub1[,c(10:12, maxCon)])
hclustering <- hclust(mdist)
myplclust(hclustering, lab.col = unclass(sub1$activity))
names(sub1[maxCon])
kClust <- kmeans (sub1[,1:533], centers = 6)
kClust <- kmeans (sub1[,-c(562,563)], centers = 6)
table(kClust$cluster, sub1$activity)
kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
kClust <- kmeans(sub1[,-c(562,563)], centers = 6, nstart = 100)
table(kClust$cluster, sub1$activity)
dim(kClust)
dim(kClust$centers)
laying <- which (kClust$size == 29)
plot(kClust$centers[laying,1:12], pch = 19, ylab = "Laying Cluster")
names sub1[1:3]
names (sub1[1:3])
walkdown < which (kClust$size==49)
walkdown <- which (kClust$size==49)
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "walkdown Cluster")
plot(kClust$centers[walkdown,1:12], pch = 19, ylab = "Walkdown Cluster")
library(swirl)
swirl()
dim(pm0)
head(pmo)
head(pm0)
cnames
library(swirl)
swirl()
cnames <- strsplit(cnames, "|", fixed = TRUE)
cnames
names(pm0) <- make.names (cnames[[1]][scol])
names(pm0) <- make.names (cnames[[1]][wcol])
wcol
pm0
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary (x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1)
)
negative <- x1<0
sum(negative, na.rm= TRUE)
mean(negative, na.rm= TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, pm0$state.Code )
cnt0 <- subset(pm0, pm0$state.Code == both)
cnt0 <- subset(pm0, state.Code == 36 & county.site %in% both)
View(cnt0)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <- as.Date(as.character(pm0sum$Date), "%Y%m%d")
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(median(x0sub,na.rm=TRUE)lwd=2)
abline(median(x0sub,na.rm=TRUE), lwd=2)
median(x0sub, na.rm=TRUE)
abline(h = median(x0sub, na.rm=TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm=TRUE), lwd = 2)
abline(h = median(x0sub, na.rm=TRUE), lwd = 2)
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm=TRUE), lwd = 2)
par(mfrow = c(1,2), mar = c(4,4,2,1))
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm=TRUE), lwd = 2)
rng <- range(x0sub,x1sub,na.rm=TRUE)
rng
mn0 <- with(pm0, tapply(Sampe.Value, State.Code, mean, na.rm = TRUE))
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
merge(do,d1,by = "state")
merge(d0,d1,by = "state")
mrg ,_merge(d0,d1,by = "state")
mrg <_merge(d0,d1,by = "state")
mrg <-merge(d0,d1,by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(.5,2.5)))
with(mrg, points(rep(1,52), mrg[,3]))
with(mrg, points(rep(2,52), mrg[,3]))
segments(rep())
segments()
mrg
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3]))
segments(rep(1,52), mrg[,2], rep(2,52), mrg[,3])
mrg[mrg$mean.x < mrg$mean.y,]
setwd("~/Coursera/ExpDataAnalysis/Project")
dir()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
View(NEI)
View(SCC)
help(split)
sapply(split(NEI, NEI$year), nrow)
sapply(split(NEI, NEI$year))
sapply(split(NEI, NEI$year)sum)
sapply(split(NEI, NEI$year),sum)
sapply(split(NEI, NEI$year),sum(NEI$Emissions))
NEIyr <- split(NEI, NEI$year)
View(NEIyr)
NEIyr[1999]
str(NEIyr)
NEIyr[1999][year]
NEIyr[1999][Emissions]
NEIyr[1999][2]
NEIyr[[year]]
NEIyr$1999[year]
NEIyr$1999
NEIyr$'1999'
sum(NEIyr$'1999'[year])
sum(NEIyr$'1999'[Emissions])
str(NEIyr$'1999')
sum(NEIyr$`1999`$Emissions)
NEIyr <- split(NEI, NEI$year)
str(NEI)
years <- unique(NEI$year)
years
source('~/Coursera/ExpDataAnalysis/Project/Plot1.R')
NEIyr$years[1]
str(years)
Averages <- (sum(NEIyr$`1999`$Emissions),sum(NEIyr$`2000`$Emissions),sum(NEIyr$`2005`$Emissions),sum(NEIyr$`2008`$Emissions)
Averages <- (sum(NEIyr$`1999`$Emissions),sum(NEIyr$`2000`$Emissions),sum(NEIyr$`2005)`$Emissions),sum(NEIyr$`2008`$Emissions)
Averages <- c(sum(NEIyr$`1999`$Emissions),sum(NEIyr$`2000`$Emissions),sum(NEIyr$`2005)`$Emissions),sum(NEIyr$`2008`$Emissions)
)
Averages
Averages <- c(sum(NEIyr$`1999`$Emissions),sum(NEIyr$`2002`$Emissions),sum(NEIyr$`2005`$Emissions),sum(NEIyr$`2008`$Emissions))
Averages
Graph <- c(years, Averages)
Graph
Graph[,] <- c(years[],Averages[])
Graph[,] <- c(years[],Averages[])
names(Averages) <- years
Averages
par(mfrow = c(1,1), mar = c(4,4,2,1))
plot(Averages, pch = 20)
par(mfrow = c(1,1), mar = c(4,4,2,1))
plot(Averages, years, pch = 20)
par(mfrow = c(1,1), mar = c(4,4,2,1))
plot(years, averages, pch = 20)
par(mfrow = c(1,1), mar = c(4,4,2,1))
plot(years, Averages, pch = 20)
par(mfrow = c(1,1), mar = c(4,4,2,1))
plot(years, Averages)
source('~/Coursera/ExpDataAnalysis/Project/Plot1.R')
